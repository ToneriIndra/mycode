<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 加载jdbc属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
						
	<!-- 数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${driverClass}"/>
		<property name="jdbcUrl" value="${jdbcUrl}"/>
		<property name="user" value="${user}"/>
		<property name="password" value="${password}"/>
	</bean>
	<!-- spring框架用于整合Hibernate的工厂bean -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 注入Hibernate相关的属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<!-- 注入Hibernate的映射文件 -->
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:cn/zhao/bos/vo/</value>
			</list>
		</property>
	</bean>
	
	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- 组件扫描 -->
	<context:component-scan base-package="cn.zhao.bos"/>
	<!-- 引入注解解析器 -->
	<context:annotation-config/>
	<!-- 事务注解 -->
	<tx:annotation-driven />
	<!-- 配置远程服务的代理对象 -->
	<bean id="customerService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
		<!-- 注入接口类型 -->
		<property name="serviceInterface" value="cn.zhao.crm.service.CustomerService"/>
		<!-- 服务访问路径 -->
		<property name="serviceUrl" value="http://localhost:8080/crm/remoting/customer"/>
	</bean>
	
	<!-- 配置一个工厂bean，用于创建shiro框架用到过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 注入安全管理器 -->
		<property name="securityManager" ref="securityManager"></property>
		<!-- 注入当前系统的登录页面 -->
		<property name="loginUrl" value="/login.jsp"/>
		<!-- 注入成功页面 -->
		<property name="successUrl" value="/index.jsp"/>
		<!-- 注入权限不足提示页面 -->
		<property name="unauthorizedUrl" value="/unauthorizedUrl.jsp"/>
		<!-- 注入URL拦截规则 -->
		<property name="filterChainDefinitions">
			<value>
				/css/** = anon
				/images/** = anon
				/js/** = anon
				/login.jsp* = anon
				/validatecode.jsp* = anon
				/userAction_login.action = anon
				/page_base_staff.action = perms["staff"]
				/page_base_region.action = perms["region"]
				/page_base_subarea.action = perms["subarea"]
				/page_base_decidedzone.action = perms["decidedzone"]
				/page_qupai_noticebill_add.action = perms["noticebill"]
				/page_qupai_quickworkorder.action = perms["quickworkordermanage"]
				/page_qupai_workorderimport.action = perms["workordermanageimport"]
				/page_qupai_diaodu.action = perms["personalassign"]
				/workordermanageAction_list.action = perms["start"]
				/taskAction_findPersonalTask.action = perms["personaltask"]
				/taskAction_findGroupTask.action = perms["grouptask"]
				/page_admin_userindex.action = perms["usermanage"]
				/page_admin_function.action = perms["functionmanage"]
				/page_admin_role.action = perms["rolemanage"]
				/processDefinitionAction_list.action = perms["processdefinition"]
				/processInstanceAction_list.action = perms["processinstance"]
				
				/* = authc
			</value> 
		</property>
	</bean>
	
	<!-- 注册自定义realm -->
	<bean id="bosRealm" class="cn.zhao.bos.shiro.BOSRealm" ></bean>
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 注入上面的realm -->
		<property name="realm" ref="bosRealm"/>
		<!-- 注入缓存管理器 -->
		<property name="cacheManager" ref="cacheManager"/>
	</bean>
	
	<!-- 注册缓存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<!-- 注入ehcache配置文件 -->
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
	</bean>
	 
	<!-- 开启shiro注解 -->
	<!-- 自动代理 -->
	<bean id="defaultAdvisorAutoProxyCreator" 
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<!-- 强制使用cglib为Action创建代理对象 -->
		<property name="proxyTargetClass" value="true"></property>
	</bean>
	<!-- 切面类 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"/>
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 注入事务管理器对象 -->
		<property name="transactionManager" ref="transactionManager"/>
		<property name="databaseSchemaUpdate" value="true" />
	</bean>

	<!-- 使用工厂创建流程引擎对象 -->
	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration" />
	</bean>
	
	<!-- 注册Service -->
	<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService">
	</bean>
	<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService">
	</bean>
	<bean id="taskService" factory-bean="processEngine" factory-method="getTaskService">
	</bean>
	<bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService">
	</bean>
	<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService">
	</bean>
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<!-- 基于校验规则的邮件发送方式 -->
		<!-- SMTP协议介绍 -->
		<property name="host" value="smtp.163.com" />
		<property name="username" value="xswz19900520" />
		<property name="password" value="******" />
		<property name="javaMailProperties">
			<props>
				<!-- 必须进行授权认证，它的目的就是阻止他人任意乱发邮件 -->
				<prop key="mail.smtp.auth">true</prop>
				<!-- SMTP加密方式:连接到一个TLS保护连接 -->
				<prop key="mail.smtp.starttls.enable">false</prop>
				<!-- 设置邮件发送超时时间 -->
				<prop key="mail.smtp.timeout">25000</prop>  
			</props>
		</property>
	</bean>
</beans>
